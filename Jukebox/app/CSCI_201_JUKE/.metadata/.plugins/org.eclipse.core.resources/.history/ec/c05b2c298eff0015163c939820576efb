package server;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;

import serverCommands.addUserCommand;
import serverCommands.followUserCommand;
import serverCommands.getFollowingCommand;
import serverCommands.getPlaylistCommand;
import serverCommands.getPlaylistsCommand;
import serverCommands.loginCommand;
import serverCommands.removePlaylistCommand;

public class ServerThread extends Thread {
	
	private ObjectInputStream ois;
	private ObjectOutputStream oos;
	private Server server;
	private DatabaseConnector dc;
	
	ServerThread(Socket s, Server server) {
		try {
			this.server = server;
			dc = new DatabaseConnector();
			oos = new ObjectOutputStream(s.getOutputStream());
			ois = new ObjectInputStream(s.getInputStream());
			this.start();
		} catch (IOException ioe) {
			System.out.println("ioe: " + ioe.getMessage());
		}
	}
	
	
	@Override
	public void run() {
		while(true) { 
			try {
				// read in object
				Object o = ois.readObject();
				if (o instanceof addUserCommand) {
					sendMessage(((addUserCommand) o).execute(dc));
				}
				else if (o instanceof followUserCommand) {
					sendMessage(((followUserCommand) o).execute(dc));
				}
				else if (o instanceof getFollowingCommand) {
					sendMessage(((getFollowingCommand) o).execute(dc));
				}				
				else if (o instanceof getPlaylistCommand) {
					sendMessage(((getPlaylistCommand) o).execute(dc));
				}
				else if (o instanceof getPlaylistsCommand) {
					
				}
				else if (o instanceof loginCommand) {
					
				}
				else if (o instanceof removePlaylistCommand) {
					
				}

				
				
			} catch (ClassNotFoundException cnfe) {
				System.out.println("cnfe: " + cnfe.getMessage());
			} catch (IOException ioe) {
				// System.out.println("client disconnected");
			} finally {
				server.removeServerThread(this);
			}
		}
	}

	// Send a message on the output stream
	public void sendMessage(Object object) {
		try {
			oos.writeObject(object);
			oos.flush();
		} catch (IOException ioe) {
			System.out.println("ioe: " + ioe.getMessage());
		}
	}
	
}
